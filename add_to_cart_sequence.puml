@startuml Add_Product_to_Cart
' Add Product to Cart â€“ Frontend + Backend (simplified API)

title Add Product to Cart Flow

actor User
boundary ProductCard
boundary ProductDetailPage
boundary CartContext
control CartService
control LocalCartService
control ApiCartService
boundary API
control CartController
control BCartService
boundary ProductRepository
boundary CartItemRepository
entity Product
entity CartItem

alt From product list
    User -> ProductCard: "Add to Cart"
    ProductCard -> CartContext: addToCart(product, qty)
else From product detail
    User -> ProductDetailPage: "Add to Cart"
    ProductDetailPage -> CartContext: addToCart(product, qty)
end
CartContext -> CartService: addToCart(product, qty)
CartService -> CartService: updateServiceReference()

alt Authenticated user
    CartService -> ApiCartService: addToCart(product, qty)
    ApiCartService -> API: POST api/cart
    API -> CartController: addToCart(dto)
    CartController -> BCartService: addToCart(dto, userId)
    BCartService -> ProductRepository: findById(productId)
    ProductRepository -> Product: read
    Product --> ProductRepository
    BCartService -> CartItemRepository: save(cartItem)
    CartItemRepository -> CartItem: save
    CartItem --> CartItemRepository
    BCartService --> CartController: CartItemDTO
    CartController --> API: 200 OK
    API --> ApiCartService: CartItemDTO
    ApiCartService --> CartService: CartItemDTO
else Guest user
    CartService -> LocalCartService: addToCart(product, qty)
    LocalCartService -> LocalCartService: save to localStorage
    LocalCartService --> CartService: CartItem
end

CartService --> CartContext: CartItem / Error
CartContext --> ProductCard: result
ProductCard --> User: show feedback

@enduml 