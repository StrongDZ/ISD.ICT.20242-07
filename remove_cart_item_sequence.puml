@startuml Remove_Cart_Item
' Remove Cart Item â€“ Frontend + Backend

title Remove Cart Item Flow

actor User
boundary CartPage
control CartContext
control CartService
control LocalCartService
control ApiCartService
boundary API
control CartController
control BCartService
boundary CartItemRepository
entity CartItem

User -> CartPage: Click "Remove" button
CartPage -> CartContext: removeFromCart(product)
CartContext -> CartService: removeFromCart(product)
CartService -> CartService: updateServiceReference()

alt Authenticated user
    CartService -> ApiCartService: removeFromCart(product)
    ApiCartService -> API: DELETE api/cart
    API -> CartController: removeFromCart(productDTO)
    CartController -> BCartService: removeFromCart(productId, userId)
    BCartService -> CartItemRepository: existsById(userId, productId)
    alt Cart item exists
        CartItemRepository --> BCartService: true
        BCartService -> CartItemRepository: deleteById(userId, productId)
        CartItemRepository -> CartItem: delete
        CartItem --> CartItemRepository: deleted
        BCartService --> CartController: void
        CartController --> API: 200 OK
        API --> ApiCartService: success
        ApiCartService --> CartService: success
    else Cart item does not exist
        CartItemRepository --> BCartService: false
        BCartService -> CartController: throw ResourceNotFoundException
        CartController --> API: 404 Not Found + error message
        API --> ApiCartService: error
        ApiCartService --> CartService: error
    end
    CartService --> CartContext: success or error
else Guest user
    CartService -> LocalCartService: removeFromCart(product)
    LocalCartService -> LocalCartService: remove from localStorage
    LocalCartService --> CartService: success
    CartService --> CartContext: success
end

CartContext --> CartPage: update cart display or show error
CartPage --> User: Item removed, cart updated or show error

note right of BCartService
  No stock validation needed for removal.
  Item is simply deleted from cart.
  If not found, return error.
end note

@enduml 